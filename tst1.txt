// Place global declarations here.
// heart&lt;-&gt;pacemaker interface
broadcast chan Apace, Vpace, Asignal, Vsignal, AlarmH, AlarmL, NoAlarm;

const int Sleep_LRI = (60 * 1000) / 30;
const int Sleep_URI = (60 * 1000) / 60;
const int Normal_LRI = (60 * 1000) / 40;
const int Normal_URI = (60 * 1000) / 100;
const int Sports_LRI = (60 * 1000) / 100;
const int Sports_URI = (60 * 1000) / 175;
const int Manual_LRI = (60 * 1000) / 30;
const int Manual_URI = (60 * 1000) / 175;

const int Low_AVI = 30;
const int High_AVI = 100;
const int Max_AVIExt = 50; // dynamic AVI
const int AVIExt_Step = 5;
const int Low_VRP = 150;
const int High_VRP = 500;
const int Low_PVARP = 150;
const int High_PVARP = 500;
const int Low_PVAB = 10;
const int High_PVAB = 60;
const int Low_MSTI = 300;
const int High_MSTI = 10000;
const int A_minwait = 0;
const int A_maxwait = 100;
const int V_minwait = 0;
const int V_maxwait = 200;

typedef int[0,1] tstkeyAV; 

// heart
clock clkheart;

int[0,2] heartmode = 0;
urgent broadcast chan HMmodechange, testHM_random, testHM_manual, testHM_test, testHM_gen[tstkeyAV];
	
// pacemaker - AA lower rate timing mode
urgent broadcast chan Asense, Vsense;
urgent broadcast chan PMmodechange, testPM_normal, testPM_sleep, testPM_sports, testPM_manual, testPM_gen[tstkeyAV];
int[0,1] pmmode = 0;
clock clk_aa, clk_pvarp;
int[Low_AVI, High_AVI] cur_avi = Low_AVI;
int[0, Max_AVIExt] cur_avi_ext = 0;
int[Low_PVARP, High_PVARP] cur_pvarp = Low_PVARP;
int[Low_PVAB, High_PVAB] cur_pvab = Low_PVAB;
int[Low_VRP, High_VRP] cur_vrp = Low_VRP;
int[0, Manual_LRI] cur_uri = Normal_URI;
int[0, Manual_LRI] cur_lri = Normal_LRI;
int[Low_MSTI, High_MSTI] cur_msti = High_MSTI;